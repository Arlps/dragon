
data（’aaa‘）取值data-aaa

-------------禁止滚下去
$(window).on('scroll',function(){
   $(window).scrollTop(0);
});

-------------禁止滚动
$('body').css('overflow','hidden')

-------------截取字符到x
str=str.substring(0,str.indexOf('x'))

-------------CSS hack
*IE6/7
\9 IE6789
 <!--[if IE 6]>html<![endif]-->

--------------IE6 透明度
filter:Alpha(opacity=20)；

--------------IE子元素不透明：
父元素position：stati，子元素position:relative;

--------------IE7+ background-size:100%:
<strong>
      background-image: url('images/user.png');
      background-size: cover;
      filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src='images/user.png',  sizingMethod='scale');
</strong>

------------------无动作
<a href="javascript:void(0);">1</a>

-----------------animate
（动画对象，速度，结束函数）

-----------------指定滚动到哪里
//   $(window)或者$(document)都可以
1.$(window).scrollTop($li.offset().top-50)；
//   此方法对window或者document无效
2.$('body').css/animate({ scrollTop:$li.offset().top-50})  

-------------------滚动某元素到视图
//当元素顶部距离浏览器顶部-150 到 300的范围内
if($(window).scrollTop()>$(ele).offset().top-150 && $(window).scrollTop()<$(ele).offset().top+300)

-------------------页面标题图标设置
<link rel="icon" href="图片位置" type="image/x-icon"/>

-------------------正则
var reg=/^[\u4E00-\u9FA5]{2,4}$/;   /*定义验证表达式*/
return reg.test(str);

-------------------背景
background-size要在background之后

------------------数据类型
typeof(aaa)=='object'

------------------阻止右键菜单
<script type="text/javascript">  
    function doNothing(){  
        window.event.returnValue=false;  
        return false;  
    }  
</script>  
<body oncontextmenu="doNothing()">
或者
document.oncontextmenu = function(e){
    e.preventDefault();
};

-----------------根号
Math.sqrt(3)

---------------事件绑定
$('button').click(a);
function a(){
     alert()
}

---------------判断空对象
var a = {};
if(JSON.stringify(a) == '{}'){
  alert(1);
}
//对象地址不一样

----------------JQ上拉下拉动画
$(this).children("ul").slideUp('fast');

-----------------Bootstrap配色
#D35650  红
#56BD62	绿
#408AC7	蓝
#F2AD52	橙
#5BC1D8	浅蓝

-------------------行内this问题
<button onclick="doit(this)"> </button>
function doit(a){
	console.log($(a))
}

----------------easypiechart渐变进度条（绿-红）
barColor: '#7266ba',
barColor: function(percent) {
    percent /= 100;
    return "rgb(" + Math.round(255 * (percent)) + ", " + Math.round(255 * (1-percent)) + ", 0)";
},


------------------主路径
${pageContext.request.contextPath}


---------------------datatables
pagingType: "full_numbers", //全按钮分页
ordering: false, //排序
searching: false, //搜索框
bLengthChange: false, //每页显示多少条数据
paging: false, scrollY: 200, //分页失效后在表格内滚动

------------------------JQ checkbox是否选中
if ($(this).attr("checked")) { ｝

------------------------阻止表单提交
<form action="index.jsp" method="post" onsubmit="return false;"> 

---------------------------单选
获取一组单选按钮对象：var obj_payPlatform = $('#wrap input[name="payMethod"]');
　　获取被选中按钮的值 ：var val_payPlatform = $('#wrap input[name="payMethod"]:checked ').val();

--------------------------单行省略号
需指定宽度
overflow: hidden;
text-overflow:ellipsis;
white-space: nowrap;



---------------(function(jQuery){})(jQuery)
由于JS变量作用域的关系，一般碰到变量JS的查找先从就近开始，比如在function中先找，找不到遍历到该function外部的function继续，直到最顶层的代码，且不论在哪个位置定义的，故如此书写节省了遍历查找的运算时间

---------=-----------bootstrap carousel 
$dom.carousel('pause') //暂停轮播

---------------------不分行
white-space:nowrap

主流浏览器版本兼容就好了。但是有一个比较好的设计是，在不支持的版本上，你需要给用户进行友好的提示，别让低版本用户觉得莫名其妙

------------------------validate
根据name进行验证

--------------------实参形参
用返回值

如果你要存的信息是后台比较常用的，还是建议用cookie
如果只是给前端用的，或者后台很少需要用到，localStorage比较好

-----------------三元表达式不能搭配return
(/\d/).test(id)?alert(1):return; 

--------------- 纯24小时时间(new Date
//  \d匹配数字  \D匹配非数字
()).toLocaleTimeString().replace(/^\D*/,'')

---------------------checkbox
checked勾选   没有checked就是不选

-----------------------setTimeout传参
setTimeout("a("+1+")",4000);
function a(str){
     alert(str)
}
//参数只能是str，不可以是对象


------------------------数值转换
parseInt方法在format'00'开头的数字时会当作2进制转10进制的方法进行转换，所以建议string转int最好用Number方法 
(number).tofixed(2)=string

----------------------函数参数带回调


---------------while
var len=5;
while(--len){
    console.log(1)
}

-------------------------bootstrap弹窗阻止滚动
$('#myModal').on('hidden.bs.modal', function (e) {
       //啊啊啊啊
})；
$('#myModal').on('show.bs.modal', function (e) {
       //啊啊啊啊
})

show/shown/hide/hiden

-----------------------------数组指定位置增加删除
var array = [1,2,3,4,6];
array.splice(4,0,5);//增加 --->123456
var array = [1,2,2,4,5];
array.splice(2,1,3);//替换---->12345
var array = [1,2,2,3,4,5];
array.splice(2,1);//删除----->12345

------------------------第一个子项
function getfirstNode(data){
	if(!data[0].hasOwnProperty('children') || data[0].children.length==0){
		return data[0].id;
	}else{
		getfirstNode(data[0].children)
	}
}

--------------------------菜单加载页面
OneMenuOnclick("indexs.action",10)；
function OneMenuOnclick(href,fn){
	$('#Appcontent').html(null);
	$.ajax({
	    async: false, 
	    type : "POST",
	    dataType:"html",
	    url : href, 
	    data: { functioncode:fn},
	    success : function(response) {
	    	$('#Appcontent').html(response);
	    	setPageHeight();
	    } 
	});
}

--------------------------------textarea默认值
<textarea>这个就是默认值</textarea>
或者
$('textarea').val('这个就是默认值')；
textarea是双标签 没有value属性

-------------在数组 arr 开头添加元素 item。不要直接修改数组 arr，结果返回新的数组
function prepend(arr, item) {  
    var arr2 = arr.slice(0);  
    arr2.unshift(item);  
    return arr2;  
}  
slice() 方法可从已有的数组中返回选定的元素

---------------------------------SVG
SVG元素主要有如下几类：svg(定义svg文档片段), rect(定义矩形), circle(定义圆形)，ellipse(定义椭圆)，path(路径)，line(线)，ploygon(多边形)，text(文字)，title(标题), desc(描述)， g(群组)， defs(参考元素)， image(图片元素)

-------------------------jquery获取select选择的文本与值
获取select 选中的 text :
    $("#ddlregtype").find("option:selected").text();
获取select选中的 value:
    $("#ddlregtype ").val();

---------------------------中文编码解码
var aaa=encodeURI("哈哈哈");
console.log(aaa);  //%E5%93%88%E5%93%88%E5%93%88
console.log(decodeURI(aaa));  //哈哈哈

-------------------------------table内无法出现省略号
td关键代码如下:
white-space: nowrap;
overflow: hidden;
text-overflow: ellipsis;

table代码如下:
table-layout: fixed;(允许设置列宽,通过th <th width="40%">) 

---------------------------------点击页面其他地方隐藏该div
$(document).bind("click",function(e){
    if($(e.target).closest(".selectTree").length == 0){
        $('.selectTree .treeBox').hide()
    }
})

-------------------------------onclick字符串参数拼接
var str="哈哈";
$('#hhh').html('<button onclick="move(\''+str+'\')">哈哈</button>')
function move(str){
	alert(str)
}



------------------------找出关键字全局替换
var str=$('#body').html();
$('#body').html(str.replace(/test/g,'****') )

-----------------------bootstrap modal点击窗外不关闭弹窗
data-backdrop="static"  或
$('.modal').modal({backdrop: 'static', keyboard: false})

----------------------------highchart柱体宽度
plotOptions:{
	series:{
		pointWidth: 25
	}
},

----------------------------时间字符串转时间戳
var start=Date.parse(new Date($('#startDate').val()));
var end=Date.parse(new Date($('#endDate').val()));


---------------------------表格字符串太长
//表格中字符长过长的处理 配合title使用
	function xStr(str,num){
		if(str.length>num){
			return str.substr(0,num)+'...';
		}else{
			return str;
		}
	}


------------------------------------------highchart点击事件
plotOptions: {
    series: {
        stacking: 'normal',
        colorByPoint: true,
        events: { 
            click: function(e) { 
                alert(e.y); 
            } 
        } 
    }
},
----------------------------------------------highchart pie线长度
dataLabels:{
connectorPadding: 1,
connectorWidth: 0.5,
connectorLen: 1,
distance: 1
}

-------------------------------------ajax error
 error: function(XMLHttpRequest, textStatus, errorThrown) {
 alert(XMLHttpRequest.status);
 alert(XMLHttpRequest.readyState);
 alert(textStatus);
   },


-----------------------------------------输出时间戳(秒)
var date = new Date(2013,08,30);
alert(date.getTime());

-----------------load和iframe
如果要加载的东西比较简单，里面的没有复杂的数据和逻辑，可以使用load。如果要加载的页面自身有复杂的逻辑、操作，还是建议使用ifame，因为iframe里面可以引入自身的js和样式，而load引入的东西，还得使用主页面的js和样式进行控制。另外，应当注意，iframe加载的东西不用考虑主页面的任何东西，比如样式，js的变量名等。但load进来的东西就得注意一下。 load进的内容和主页面共享同一块内存，而iframe是两块内存


--------------------------------loading
<i class="fa fa-spinner fa-pulse"></i>

---------------------offset
$().offset().top  任意div距离文档顶部
$().offsetTop


-----------------------------------overflow
overflow-xy不能设置一个为visible一个为auto  fuck

-------------------------------------CSS3 animation
.info-block .alarm{
	/*名称+时长+无限次+回退*/
	 animation:shine 2s infinite alternate;
}
@keyframes shine{
	0%{ opacity:1;}
	100%{ opacity:0;}
}

------------------------nice scroll
$('#pie_chartIndex').niceScroll({
//		    cursorcolor: "#ccc",//#CC0071 光标颜色
//		    cursoropacitymax: 0.5, //改变不透明度非常光标处于活动状态（scrollabar“可见”状态），范围从1到0
//		    touchbehavior: false, //使光标拖动滚动像在台式电脑触摸设备
//		    cursorwidth: "5px", //像素光标的宽度
//		    cursorborder: "0", // 游标边框css定义
//		    cursorborderradius: "5px",//以像素为光标边界半径
//		    autohidemode: true //是否隐藏滚动条
});

--------------------主站 曲线
type:'areaspline'
color:'#3C8DBC'
plotOptions:{
   series:{
       shadow:true,
       marker:{
            enabled:false
       }
   }
}

----------------------------------------------------$.trim()
$.trim()是jQuery提供的函数，用于去掉字符串首尾的空白字符。

--------------------------------------------------zTree
zTree.setting.edit.showRemoveBtn = true;
zTree.setting.edit.showRenameBtn = true;
zTree.setting.edit.removeTitle = "删除";
zTree.setting.edit.renameTitle = "编辑"
zTree 不提供默认的增加按钮，如需实现请利用自定义控件的方法 addHoverDom / removeHoverDom 

nodes = zTree.getNodesByParam("isHidden", true); 
zTree.showNodes(nodes); 
var root = zTree.getNodeByParam("level", "0");


----------------------------------------------当前时间
function getTime() {
	var now= new Date(),
	h=now.getHours(),
	m=now.getMinutes(),
	s=now.getSeconds(),
	ms=now.getMilliseconds();
	return (h+":"+m+":"+s+ " " +ms);
}


----------------------vis

//nodes/edges为dataset后的数据
//转化dataset为JSON格式对象
nodes.get()  edges.get()
//nodes和edges共有add/remove/update,处理的内容可以为对象或者数组
//增加节点  
nodes.add({id:newId, label:"I'm new!"});
//删除节点
nodes.remove({id:0})
//更新数据
nodes.update([{id:1, color:{background:newColor}}]);
// 获取选中的点和线
var nodes=network.getSelection();
// 获取选中的点
var nodes=network.getSelectedNodes();
//获取所有连接节点
var connectedNodes = network.getConnectedNodes(node_id);
//销毁
        function destroy() {
            if (network !== null) {
                network.destroy();
                network = null;
            }
        }
//改变配置
network.setOptions({nodes:{shadow:shadowState},edges:{shadow:shadowState}});
//重置为初始化数据
function resetAllNodes() {
        nodes.clear();
        edges.clear();
        nodes.add(nodesArray);
        edges.add(edgesArray);
    }
//赋值新数据
network.setData({nodes:nodes, edges:edges})
//根据值去绘制大小
nodes: {
          shape: 'dot',
          scaling: {
            customScalingFunction: function (min,max,total,value) {
              return value/100;
            },
            min:5,
            max:150
          }
        }


-------------------------------------------------------主站暂无数据
var contet="<div style='text-align:center;color:#e0e0e0;padding-top:58px'>"
	+"<i class='fa fa-warning' style='font-size:150px'></i><br>"
	+"<font style='font-size:16px;color:#d0d0d0;'>暂无数据</font></div>";
$("#pie_chartIndex").html(contet);

["网络设备", "6", "11", "操作系统", "248", "214", ""]

--------------------------------------------------------小数点后
num=num.toFix(2)

--------------------------------------------------setTimeout传参
//function不需要传参数
setTimeout(function(){
	monitor(item)
},2000)


-------------------------------------循环操作变量名
for(var i=1;i<=10;i++){
    window["num"+i]="统一设置变量值num1-num10";
}
//或eval强制执行
for(i=1;i<10;i++)
{
 eval("var num"+i+" = 123;");
}

-----------------------------------------bootstrap 表格
<table class="table table-bordered table-responsive table-hover table-striped">
	<thead></thead>
	<tbody></tbody>
</table>

----------------------------------------合并单元格
<td colspan="2">January</td>


----------------------------------------jQuery中获得选中select值
$('#testSelect option:selected').text();//选中的文本
$('#testSelect option:selected') .val();//选中的值
$("#testSelect ").get(0).selectedIndex;//索引


----------------------------------checkbox是否选中
if($('#checkbox-id').is(':checked')) {
     // do something
 }


---------------------删除数组成员
Array.prototype.removeByValue = function(val) {
  for(var i=0; i<this.length; i++) {
    if(this[i] == val) {
      this.splice(i, 1);
      break;
    }
  }
}
var somearray = ["mon", "tue", "wed", "thur"]
somearray.removeByValue("tue");

---------------------------animate.css
<div class="box animated flash" style="animation-delay:1s"></div>

------------------------------微软雅黑
font-family:"Microsoft YaHei"

----------------------------------css渐变色
background-image: linear-gradient(to bottom, #ffffff, #f5f6f9);

----------------------------------网页设计效果
CSS3 
animate.csse
echart/highchart
3D轮播
粒子、景深背景
鼠标动作特效
立体边框
图标ICON
边框渐变线条（荧光）
背景渐变（书页）

----------------------------媒体查询
@media( min-width:1500px){
			html,body{ height:100%; background:#ff0;}
		}


---------------------------map
pieData.map(function(item){return item.name})

--------------------------animate 重复调用带参数
function scrollUp($dom){
	$dom.css('top',0);console.log($dom.css('top'))
	$dom.animate({
		top:'-100%'
	},5000,'linear',function(){
		scrollUp($dom)
	})
}

-----------------------------------------N次方
Math.pow(10,n)

----------------------------------------------无缝滚动
function scrollUp($dom){
	var $ul=$dom.find('ul');
	setInterval(function(){
		var top=parseInt($ul.css('top'));console.log(top)
		top=top-2;
		if(top<-20){
			top=0;
			var html=$ul.find('li').first().html();
			$ul.find('li').first().remove();
			$ul.append('<li>'+html+'</li>')
		};
		$ul.css('top',top);
	},100)
}


//----------------------------------------函数传入参数
function aa() {}
if (aa.arugments.length > 0) {
    alert('function aa have args!');
} else {
    alert('function aa dose not have args!');
}

//----------------------------------------设置函数默认参数值
a(1,2);
function a(a,b,c){
	var length=arguments[2]?arguments[2]:100;
	console.log(length)
}



--------------------------------------手机端
<meta name="viewport" content="width=device-width, initial-scale=1" />


---------------------------根据某个属性值排列
arr.sort(function(a,b){return a.value-b.value})


-----------------------------require.js
异步模块加载机制，把代码分为模块来分块加载，提高代码的重用。
【优点】
不得不说rj有很多优点，例如：
1.模块化
2.压缩
所以，适用的场景是：
1.公司有自己的前端部门，会自己开发前端相关插件，这个时候模块化是一个很好的选择
2.基于nodejs做webapp，nodejs+rj是一个很好的选择
3.开发游戏等

上面其实说了一件事情，就是当你的js都是自己写的，而且有很多js的时候rj很适用，
基本上就类似用java开发一个项目了，文件太多，所以需要分package和import

【缺点】
其实也不是什么缺点，但是有些场景是不适用的
1.小公司，不会自己去开发前端插件，而都是拿来插件就用的，

【总结】
1.大量js，或前端插件完全自己开发，或nodejs开发的场景适合rj
2.中小公司，喜欢使用现有插件的，慎用
2.非nodejs开发，或非游戏开发


-------------------------------------git中文乱码
git config core.quotepath false

-------------------------------------css hack
CSS Hack大致有3种表现形式：CSS属性前缀法、选择器前缀法以及IE条件注释法（即HTML头部引用if IE）Hack

lte：就是Less than or equal to的简写，也就是小于或等于的意思。
lt ：就是Less than的简写，也就是小于的意思。
gte：就是Greater than or equal to的简写，也就是大于或等于的意思
gt ：就是Greater than的简写，也就是大于的意思。
! ：就是不等于的意思。

------------------------------------属性选择器
[attribute~=value] 选取属性值中包含指定词汇的元素
[attribute|=value]  选取带有以指定值开头的属性值的元素，该值必须是整个单词。
[attribute$=value]	匹配属性值以指定值结尾的每个元素
[attribute*=value]	匹配属性值中包含指定值的每个元素


-------------------------------滚动高度初始化
$('#view-detail-window').scrollTop(0)


----------------------------------HTML和JS同时绑定动作
<button id="btn" onclick="xxx()">click</button>
<script>
//后执行
	$('#btn').click(function(){
		alert("JS绑定")
	})
	// 先执行
	function xxx(){
		alert("HTML绑定")
	}
</script>


----------------------------------next() 、siblings
next:相邻同胞元素
siblings:相邻元素

------------------------------------阴影
box-shadow: 0px 13px 30px -12px rgba(0,0,0,0.15);

------------------------------------滚动过程中出现动画
function action(){
	$('.action').each(function(idx,ele){
		if($(this).offset().top<= $(document).scrollTop()+$(window).height()){
			var animate=$(this).data('animate');
			var delay=$(this).data('delay');
			$(this).addClass('animated '+animate);
			if(delay){
				$(this).css('animation-delay',delay)
			}
		}
	})
}

--------------------------------------浏览器标题栏图标
<link rel="icon" href="图片位置" type="image/x-icon"/>
icon格式图片

--------------------------------------重置表单
$("form").get(0).reset();

-----------------------------modal完全显示后
$('.modal').on('shown.bs.modal',function(){
	$('.highcharts-container').parent('div').highcharts().reflow();
})


-------------------------------------事件监听可重复绑定
document.getElementById('box').addEvenListerner('click',function(){ alert(1) })
document.getElementById('box').addEvenListerner('click',function(){ alert(2) })

----------------Date对象
new Date().getFullYear/Hours/Minutes/Seconds/Time()
new Date().getSetYear/Hours/Minutes/Seconds//Time()

---------------str对象
str.match('xx'); // xx 或 null
str.replace('xx','yy')


--------------------js dom
getAttribute()
setAttribute()
childNodes
parentNode
createElement()
insertBefore()?
removeChild()

----------------------window
window.open('1.html','index'.'height=100,width,left,top');
window.close()
